---
title: "Calculate Affected Demographics"
format: html
editor: visual
---

In this document, you will calculate station-level PM2.5 changes. Afterward, you will calculate impacted demographic groups around each station.

# Calculating Station-Level Pollution Change

```{r}
#install.packages('tigris')
library("tidyverse")
library("knitr")
library('terra')
```

Upload your team's full data frame required to estimate the impact of light rails on PM2.5 levels surrounding all stations. Below is a simplified example.

```{r}
df3 <- read.csv('regression_analysis_data')
```

Run stations level regressions. Use the best regression specification (in your team's opinion) from the average effect calculation.

```{r}
summary(m1 <- lm(log(pm25) ~ MetroOpen:as.factor(city_num) + construction + 
                   TERP + NAAQS +
                   temp + lag_temp + lag_temp_2 + lag_temp_3 + lag_temp_4 + 
                   wind + lag_wind + lag_wind_2 + lag_wind_3 + lag_wind_4 + 
                   humidity + lag_humidity + lag_humidity_2 + lag_humidity_3 +
                   lag_humidity_4 + 
                   as.factor(month) + as.factor(dow) + holiday + 
                   t + t2 + t3 + t4, data = df3))
#The code below prints out the station-level effect and the p-values
```

```{r}
len_coef<-length(coef(m1))

#get coefficients of the station-level effect
coef<-coef(m1)[(len_coef-25): len_coef]

#get p values of the station-level effect (p<0.05 is statistically significant)
pval<-summary(m1)$coefficients[,4][(len_coef-3): len_coef]

kable(cbind(coef, pval), digits=2)
```

# Query demographic data

Helpful resource: <https://walker-data.com/tidycensus/articles/basic-usage.html>

Get census key

```{r}
library(tidycensus)
api_key <- "6a05830bfcff3c85fb89403e86551d59a94c059a"
# Thanicha - 43a847b486e6474534b5e09d747e72ffd18f4ba2
# Avi Key: 6a05830bfcff3c85fb89403e86551d59a94c059a
census_api_key(api_key, install=TRUE, overwrite = T)
readRenviron("~/.Renviron")
```

Identify variables that you would like to query

```{r}
vars<-load_variables(year=2004, dataset="acs1", cache = TRUE)
#P005001 Total
#P005003 White
#P005004 Black
#P005005 Native
#P005006 Asian
#P005010 Hispanic

vars2<-load_variables(year=2008, dataset="acs1", cache = TRUE)
write.csv(vars2, "demo_vars.csv")

vars5<-load_variables(2010, dataset="sf2")
vars4<-load_variables(2020, dataset="sf1")
write.csv(vars4, "demo_vars5.csv")


```

Query variables

```{r}

targetvars<-c("P005001","P005003", "P005004","P005005","P005006","P005010")
targetvars_acs <- c("B00001_001","B00002_001","B01001A_001")
race<-get_acs(year = 2008, geography = "county", variables=targetvars_acs, 
                    state="TX", county="Harris County", output="wide",
              survey = 'acs1')
```

Rename columns

```{r}
racename<-race %>%
  rename(total=P005001, white=P005003, black=P005004, native=P005005, 
         asian=P005006, hisp=P005010)
```

# Calculate affected demographic group

```{r}
library("terra")
```

```{r}
buff<-vect("buff_sta.shp")
plot(buff)
```

Download shapefiles from [tigris package](https://github.com/walkerke/tigris)

```{r}
#install.packages('sp')
library('sp')
library('tigris')
shape<-tigris::tracts(state="TX", county="Harris County", class="sp", year=2010)
shapevect<-vect(shape)
shapedf<-as.data.frame(shape)

plot(buff)
lines(shapevect, col="red")
```

```{r}
blockrace<-merge(shapevect, racename, by.x="GEOID10", by.y="GEOID")

blockrace$blockarea<-expanse(blockrace, unit="m")

blockracedf<-as.data.frame(blockrace)

summary(blockracedf)

#100 percent match
```

Intersect blocks with buffers

```{r}

buffdf <- as.data.frame(buff)

output<-c()

for(i in 0:25){
  print(i)
  buff2 <-subset(buff, buff$FID ==i)
  int<-crop(blockrace, buff2)
  int$intarea<-expanse(int, unit="m")
  intdf<-as.data.frame(int)%>%
  mutate(frac_area=intarea/blockarea) %>%
  mutate(total=total*frac_area, 
         white=white*frac_area, 
         black=black*frac_area, 
         native=native*frac_area, 
         asian=asian*frac_area, 
         hisp=hisp*frac_area) %>%
  summarize(total=sum(total), 
            white=sum(white), 
            black=sum(black), 
            native=sum(native), 
            asian=sum(asian), 
            hisp=sum(hisp)) %>%
  mutate(pct_white=white*100/total, 
         pct_black=black*100/total, 
         pct_native=native*100/total,
         pct_asian=asian*100/total,
         pct_hisp=hisp*100/total) %>%
    mutate(FID=i)

output<-rbind(output, intdf)
}
```

Summarize demographic groups that live near light rail stations

```{r}
sum_demog<-output %>%
  summarize(total=sum(total), 
            white=sum(white), 
            black=sum(black), 
            native=sum(native), 
            asian=sum(asian), 
            hisp=sum(hisp)) %>%
  mutate(pct_white=white*100/total, 
         pct_black=black*100/total, 
         pct_native=native*100/total,
         pct_asian=asian*100/total,
         pct_hisp=hisp*100/total) %>%
  select(pct_hisp, pct_white, pct_native, pct_black, pct_asian)

kable(sum_demog, digits=2)
```

Merge station-level demographic data with station-level pollution reduction data.

```{r}
alldf<-cbind(output, coef)
```

Calculate the average emissions that each demographic group sees by using the formula below:

$\dfrac{Hisp_{area1} \times Reduction_{area1} + Hisp_{area2} \times Reduction_{area2}}{Hisp_{area1} + Hisp_{area2}}$

```{r}
reddf<-alldf %>%
  mutate(total_change=total*coef, white_change=white*coef, 
         black_change=black*coef, native_change=native*coef, 
         hisp_change=hisp*coef) %>%
  summarize(total_change_sum=sum(total_change),
            white_change_sum=sum(white_change),
            black_change_sum=sum(black_change),
            native_change_sum=sum(native_change),
            hisp_change_sum=sum(hisp_change),
            total=sum(total), 
            white=sum(white), 
            black=sum(black), 
            native=sum(native), 
            asian=sum(asian), 
            hisp=sum(hisp)) %>%
  mutate(total_change_ave=total_change_sum*100/total,
         black_change_ave=black_change_sum*100/black,
         white_change_ave=white_change_sum*100/white,
         native_change_ave=native_change_sum*100/native,
         hisp_change_ave=hisp_change_sum*100/hisp)

#display results
changedf<-reddf %>%
  select(total_change_ave, black_change_ave, white_change_ave, native_change_ave, hisp_change_ave)

kable(changedf, digits=2)
```

Results: Blacks sees the most reduction (more than average), followed by Hispanics (about average), followed by whites, and the Native Americans.
